// <auto-generated />
using System;
using Festou2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Festou2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221014185451_M00")]
    partial class M00
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Festou2.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<decimal>("ClienteBudget")
                        .HasColumnType("decimal(50,10)");

                    b.Property<int>("ClienteCPF")
                        .HasColumnType("int");

                    b.Property<DateTime>("ClienteIdade")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClienteNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Festou2.Models.Locador", b =>
                {
                    b.Property<int>("LocadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocadorId"), 1L, 1);

                    b.Property<int>("Ambiente")
                        .HasColumnType("int");

                    b.Property<int>("LocadorCPF")
                        .HasColumnType("int");

                    b.Property<string>("LocadorDescricaoAmbiente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LocadorIdade")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocadorNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LocadorPreco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LocadorId");

                    b.ToTable("Locadores");
                });

            modelBuilder.Entity("Festou2.Models.Local", b =>
                {
                    b.Property<int>("ambiente")
                        .HasColumnType("int");

                    b.Property<int?>("LocadorId")
                        .HasColumnType("int");

                    b.Property<int>("QtdPessoas")
                        .HasColumnType("int");

                    b.Property<int>("tipoFesta")
                        .HasColumnType("int");

                    b.HasKey("ambiente");

                    b.HasIndex("LocadorId");

                    b.ToTable("Local");
                });

            modelBuilder.Entity("Festou2.Models.Local", b =>
                {
                    b.HasOne("Festou2.Models.Locador", null)
                        .WithMany("Locais")
                        .HasForeignKey("LocadorId");
                });

            modelBuilder.Entity("Festou2.Models.Locador", b =>
                {
                    b.Navigation("Locais");
                });
#pragma warning restore 612, 618
        }
    }
}
